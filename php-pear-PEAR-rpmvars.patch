diff -u -r PEAR-1.4.6.orig/usr/share/pear/PEAR/Command/Package.php PEAR-1.4.6/usr/share/pear/PEAR/Command/Package.php
--- PEAR-1.4.6.orig/usr/share/pear/PEAR/Command/Package.php	2006-03-06 03:21:27.000000000 +0200
+++ PEAR-1.4.6/usr/share/pear/PEAR/Command/Package.php	2006-03-06 03:22:16.000000000 +0200
@@ -814,8 +814,10 @@
         }
 
         $info['extra_headers'] = '';
-        $info['doc_files'] = '';
+        $info['doc_files'] = array();
         $info['files'] = '';
+        $info['test_files'] = '';
+        $info['data_files'] = '';
         $info['package2xml'] = '';
         $info['rpm_package'] = sprintf($rpm_pkgname_format, $pf->getPackage());
         $srcfiles = 0;
@@ -825,10 +827,10 @@
             }
             $name = preg_replace('![/:\\\\]!', '/', $name);
             if ($attr['role'] == 'doc') {
-                $info['doc_files'] .= " $name";
+                $info['doc_files'][] = $name;
             // Map role to the rpm vars
             } else {
-                $c_prefix = '%{_libdir}/php/pear';
+                $c_prefix = '%{php_pear_dir}';
                 switch ($attr['role']) {
                     case 'php':
                         $prefix = $c_prefix;
@@ -860,9 +862,31 @@
                     break;
                 }
                 $name = str_replace('\\', '/', $name);
-                $info['files'] .= "$prefix/$name\n";
+				if (isset($attr['baseinstalldir']) and ($ttrim = trim($attr['baseinstalldir'], '/'))) {
+					$name = $ttrim . '/' . $name;
+				}
+				if ($attr['role'] == 'test') {
+					$info['test_files'] .= "$prefix/$name\n";
+
+				} elseif ($attr['role'] == 'data') {
+					$info['data_files'] .= "$prefix/$name\n";
+
+				} else {
+					$info['files'] .= "$prefix/$name\n";
+				}
             }
         }
+
+		$ndocs = count($info['doc_files']);
+		if ($ndocs > 1) {
+			$info['doc_files'] = '%doc docs/%{_pearname}/{' . join(',', $info['doc_files']) . '}';
+		} elseif ($ndocs > 0) {
+			$info['doc_files'] = '%doc docs/%{_pearname}/' . join(',', $info['doc_files']);
+		} else {
+			$info['doc_files'] = '';
+		}
+		$info['have_tests'] = (strlen($info['test_files']) > 0) + 0;
+
         if ($srcfiles > 0) {
             require_once 'OS/Guess.php';
             $os = new OS_Guess;
@@ -888,22 +912,60 @@
         $info['package'] = $pf->getPackage();
         $info['version'] = $pf->getVersion();
         $info['release_license'] = $pf->getLicense();
+        $info['release_state'] = $pf->getState();
+		@list($info['class'], $info['subclass']) = explode('_', $info['package'], 2);
+		if (empty($info['subclass'])) {
+			$info['subclass'] = '%{nil}';
+		}
+
+		$info['optional'] = '';
+		$info['optional-pkg'] = array();
+		$info['optional-ext'] = array();
         if ($pf->getDeps()) {
+
             if ($pf->getPackagexmlVersion() == '1.0') {
                 $requires = $conflicts = array();
                 foreach ($pf->getDeps() as $dep) {
                     if (isset($dep['optional']) && $dep['optional'] == 'yes') {
+						if ($dep['type'] == 'ext') {
+							$info['optional-ext'][] = 'php-' . $dep['name'];
+						} else {
+							if ($dep['type'] == 'php') {
+								# this doesn't make much sense, so ignore
+								#$info['optional-php'][] = 'php-common';
+							} else {
+								$info['optional'] .= "'pear(". str_replace('_', '/', $dep['name']) . ".*)' ";
+								$info['optional-pkg'][] = 'php-pear-'. $dep['name'];
+							}
+						}
                         continue;
                     }
-                    if ($dep['type'] != 'pkg') {
-                        continue;
-                    }
-                    if (isset($dep['channel']) && $dep['channel'] != 'pear.php.net' &&
-                          $dep['channel'] != 'pecl.php.net') {
-                        $chan = &$reg->getChannel($dep['channel']);
-                        $package = strtoupper($chan->getAlias()) . '::' . $dep['name'];
+
+					// PHP engine
+                    if ($dep['type'] == 'php') {
+                        $package = 'php-common';
+
+					// PHP Extension
+                    } elseif ($dep['type'] == 'ext') {
+                        $package = 'php-' . $dep['name'];
+
                     } else {
-                        $package = 'PEAR::' . $dep['name'];
+						if ($dep['type'] != 'pkg') {
+							continue;
+						}
+
+						if (isset($dep['channel']) && $dep['channel'] != 'pear.php.net' &&
+							  $dep['channel'] != 'pecl.php.net') {
+							$chan = &$reg->getChannel($dep['channel']);
+							$package = strtoupper($chan->getAlias()) . '::' . $dep['name'];
+						} else {
+							// assume lowercased package name as pecl
+							if (strtolower($dep['name']) == $dep['name']) {
+								$package = 'php-pecl-' . $dep['name'];
+							} else {
+								$package = 'php-pear-' . $dep['name'];
+							}
+						}
                     }
                     $trans = array(
                         '>' => '>',
@@ -917,21 +979,34 @@
                         'le' => '<=',
                         'eq' => '=',
                     );
+
+					// known rpm epoches
+					$epoches = array(
+						'php-common' => 3,
+						'php-pear-PEAR' => 1,
+					);
+
                     if ($dep['rel'] == 'has') {
                         $requires[] = $package;
                     } elseif ($dep['rel'] == 'not') {
                         $conflicts[] = $package;
                     } elseif ($dep['rel'] == 'ne') {
+						$epoch = isset($epoches[$package]) ? ($epoches[$package] . ':') : '';
                         $conflicts[] = $package . ' = ' . $dep['version'];
                     } elseif (isset($trans[$dep['rel']])) {
-                        $requires[] = $package . ' ' . $trans[$dep['rel']] . ' ' . $dep['version'];
+						$epoch = isset($epoches[$package]) ? ($epoches[$package] . ':') : '';
+                        $requires[] = $package . ' ' . $trans[$dep['rel']] . ' ' . $epoch . $dep['version'];
                     }
                 }
                 if (count($requires)) {
-                    $info['extra_headers'] .= 'Requires: ' . implode(', ', $requires) . "\n";
+					foreach ($requires as $dep) {
+						$info['extra_headers'] .= "Requires:\t" . $dep . "\n";
+					}
                 }
                 if (count($conflicts)) {
-                    $info['extra_headers'] .= 'Conflicts: ' . implode(', ', $conflicts) . "\n";
+					foreach ($conflicts as $dep) {
+						$info['extra_headers'] .= "Conflicts:\t" . $dep . "\n";
+					}
                 }
             } else {
                 $info['package2xml'] = '2'; // tell the spec to use package2.xml
@@ -946,7 +1021,7 @@
                             $chan = &$reg->getChannel($dep['channel']);
                             $package = strtoupper($chan->getAlias()) . '::' . $dep['name'];
                         } else {
-                            $package = 'PEAR::' . $dep['name'];
+                            $package = 'php-pear-' . $dep['name'];
                         }
                         if (isset($dep['conflicts']) && (isset($dep['min']) ||
                               isset($dep['max']))) {
@@ -1049,21 +1124,57 @@
                     if ($a === null || PEAR::isError($a)) {
                         $info['package2xml'] = '';
                         // this doesn't have a package.xml version 1.0
-                        $requires[] = 'PEAR::PEAR >= ' .
-                            $deps['required']['pearinstaller']['min'];
+                        $requires[] = 'php-pear-PEAR >= 1:' .
+                            preg_replace('/^([\d.]+)(.+)$/', '$1-0.$2', $deps['required']['pearinstaller']['min']);
                     }
                     if (count($requires)) {
-                        $info['extra_headers'] .= 'Requires: ' . implode(', ', $requires) . "\n";
+						foreach ($requires as $dep) {
+							$info['extra_headers'] .= "Requires:\t" . $dep . "\n";
+						}
                     }
                     if (count($conflicts)) {
-                        $info['extra_headers'] .= 'Conflicts: ' . implode(', ', $conflicts) . "\n";
+						foreach ($conflicts as $dep) {
+							$info['extra_headers'] .= "Conflicts:\t" . $dep . "\n";
+						}
                     }
                 }
+
+                if (isset($deps['optional']['package'])) {
+					$a = $deps['optional']['package'];
+					foreach ((isset($a[0]) ? $a : array($a)) as $dep) {
+						$info['optional'] .= "'pear(". str_replace('_', '/', $dep['name']) . ".*)' ";
+						$info['optional-pkg'][] = 'php-pear-'. $dep['name'];
+					}
+				}
+                if (isset($deps['optional']['extension'])) {
+					$a = $deps['optional']['extension'];
+					foreach (isset($a[0]) ? $a : array($a) as $dep) {
+						$info['optional-ext'][] = 'php-' . $dep['name'];
+					}
+				}
             }
         }
 
         // remove the trailing newline
         $info['extra_headers'] = trim($info['extra_headers']);
+        $info['optional'] = trim($info['optional']);
+		$info['have_optional_deps'] = (strlen($info['optional']) > 0) + 0;
+
+		$tmp = $info['optional-pkg'];
+		$info['optional-pkg'] = '';
+		if (count($tmp)) {
+			foreach ($tmp as $dep) {
+				$info['optional-pkg'] .= "Optional-pkg:\t" . $dep . "\n";
+			}
+		}
+		$tmp = $info['optional-ext'];
+		$info['optional-ext'] = '';
+		if (count($tmp)) {
+			foreach ($tmp as $dep) {
+				$info['optional-ext'] .= "Optional-ext:\t" . $dep . "\n";
+			}
+		}
+
         if (function_exists('file_get_contents')) {
             fclose($fp);
             $spec_contents = preg_replace('/@([a-z0-9_-]+)@/e', '$info["\1"]',
